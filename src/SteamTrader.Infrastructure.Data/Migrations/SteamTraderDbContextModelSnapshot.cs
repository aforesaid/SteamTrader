// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SteamTrader.Infrastructure.Data;

namespace SteamTrader.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SteamTraderDbContext))]
    partial class SteamTraderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SteamTrader.Domain.Entities.TradeOfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("From")
                        .HasColumnType("integer");

                    b.Property<decimal>("FromPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("GameId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("Margin")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("To")
                        .HasColumnType("integer");

                    b.Property<decimal>("ToPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DateTime");

                    b.HasIndex("From");

                    b.HasIndex("Margin");

                    b.HasIndex("To");

                    b.ToTable("TradeOffers");
                });

            modelBuilder.Entity("SteamTrader.Domain.Entities.TradeTaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("TradeOfferEntityId")
                        .HasColumnType("uuid");

                    b.Property<int>("TradeStage")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TradeStage");

                    b.ToTable("TradeTask");
                });

            modelBuilder.Entity("SteamTrader.Domain.Steam.ItemNames.SteamItemNameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemId")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("MarketplaceHashName")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MarketplaceHashName");

                    b.ToTable("SteamItemNames");
                });
#pragma warning restore 612, 618
        }
    }
}
